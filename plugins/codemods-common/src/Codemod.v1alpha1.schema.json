{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "CodemodEntityV1alpha1",
  "description": "A Codemod describes a modification to be done on catalog entities.",
  "examples": [
    {
      "apiVersion": "codemod.backstage.io/v1alpha1",
      "kind": "Codemod",
      "metadata": {
        "name": "change-owner",
        "title": "Change owner",
        "description": "Updates an entity's owner.",
        "tags": ["maintenance"]
      },
      "spec": {
        "owner": "developer-experience",
        "constraints": {
          "spec.type": ["service"]
        },
        "parameters": {
          "required": ["newOwner"],
          "properties": {
            "newOwner": {
              "title": "New owner",
              "type": "string",
              "description": "The new owner"
            }
          }
        },
        "steps": []
      }
    }
  ],
  "allOf": [
    {
      "$ref": "Entity"
    },
    {
      "type": "object",
      "required": ["spec"],
      "properties": {
        "apiVersion": {
          "enum": ["codemod.backstage.io/v1alpha1"]
        },
        "kind": {
          "enum": ["Codemod"]
        },
        "spec": {
          "type": "object",
          "required": ["steps"],
          "properties": {
            "details": {
              "type": "string",
              "description": "Text explaining what the codemod does and how it should be used. Only used by the frontend to guide codemod users.",
              "minLength": 1
            },
            "owner": {
              "type": "string",
              "description": "The user (or group) owner of the codemod",
              "minLength": 1
            },
            "constraints": {
              "type": "object",
              "description": "Set of constraints describing entities on which the codemod can be applied."
            },
            "parameters": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "The JSONSchema describing the inputs for the codemod."
                },
                {
                  "type": "array",
                  "description": "A list of separate forms to collect parameters.",
                  "items": {
                    "type": "object",
                    "description": "The JSONSchema describing the inputs for the codemod."
                  }
                }
              ]
            },
            "steps": {
              "type": "array",
              "description": "A list of steps to execute.",
              "items": {
                "type": "object",
                "description": "A description of the step to execute.",
                "required": ["action"],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the step, which can be used to refer to its outputs."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the step, which will be displayed in the UI during the codemod process."
                  },
                  "action": {
                    "type": "string",
                    "description": "The name of the action to execute."
                  },
                  "input": {
                    "type": "object",
                    "description": "A templated object describing the inputs to the action."
                  },
                  "if": {
                    "type": ["string", "boolean"],
                    "description": "A templated condition that skips the step when evaluated to false. If the condition is true or not defined, the step is executed. The condition is true, if the input is not `false`, `undefined`, `null`, `\"\"`, `0`, or `[]`."
                  }
                }
              }
            },
            "output": {
              "type": "object",
              "description": "A templated object describing the outputs of the codemod.",
              "properties": {
                "links": {
                  "type": "array",
                  "description": "A list of external hyperlinks, typically pointing to resources created or updated by the template",
                  "items": {
                    "type": "object",
                    "required": [],
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "A url in a standard uri format.",
                        "examples": ["https://github.com/my-org/my-new-repo"],
                        "minLength": 1
                      },
                      "entityRef": {
                        "type": "string",
                        "description": "An entity reference to an entity in the catalog.",
                        "examples": ["Component:default/my-app"],
                        "minLength": 1
                      },
                      "title": {
                        "type": "string",
                        "description": "A user friendly display name for the link.",
                        "examples": ["View new repo"],
                        "minLength": 1
                      },
                      "icon": {
                        "type": "string",
                        "description": "A key representing a visual icon to be displayed in the UI.",
                        "examples": ["dashboard"],
                        "minLength": 1
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  ]
}
